[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'

[[plugins]]
repo = 'Shogo/neocomplete.vim'
if = "has('lua')"

[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = ['markdown']

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']

[[plugins]]
repo = 'kana/vim-filetype-haskell'
on_ft = ['haskell']

[[plugins]]
repo = 'eagletmt/ghcmod-vim'
on_ft = ['haskell']

[[plugins]]
repo = 'ujihisa/neco-ghc'
on_ft = ['haskell']

[[plugins]]
repo = 'dag/vim2hs'
on_ft = ['haskell']

[[plugins]]
repo = 'thinca/vim-ref'
on_ft = ['haskell']

[[plugins]]
repo = 'ujihisa/ref-hoogle'
on_ft = ['haskell']

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']
